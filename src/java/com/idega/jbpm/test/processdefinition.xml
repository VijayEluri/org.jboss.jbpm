<?xml version="1.0" encoding="UTF-8"?>

<process-definition
  xmlns=""  name="nestSomeProcess">
   <start-state name="submitNewCase">
      <task name="Submit New Case">
         <controller>
            <variable name="string:ownerFirstName" access="read,write,required"></variable>
            <variable name="string:ownerLastName" access="read,write,required"></variable>
            <variable name="string:defendantName" access="read,write,required"></variable>
            <variable name="string:ownerCaseInformation" access="read,write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read]}},
                   {roleName: "owner", accesses: {access: [read, write]}}
                ]} }}
            </expression>
         </assignment>
      </task>
      <transition name="" to="sendNewCaseArrivedMessages"></transition>
   </start-state>
   <node name="sendNewCaseArrivedMessages">
      <transition name="tr2" to="fork1"></transition>
   </node>
   <task-node name="requestAdditionalInformation">
      <task name="Request Additional Information">
         <controller>
            <variable name="string:additionalInformationRequestText" access="read,write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read, write]}}
                ]} }}
            </expression>
         </assignment>
         <!--  
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read, write]}},
                   {roleName: "owner", accesses: {access: [read, write]}} 
                ]} }}
            </expression>
         </assignment>
         -->
      </task>
      <transition name="" to="fork2"></transition>
   </task-node>
   <task-node name="submitAdditionalInformation">
      <task name="Submit Additional Information">
         <controller>
            <variable name="string:additionalInformationRequestText" access="read"></variable>
            <variable name="string:additionalInformation" access="read,write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read]}},
                   {roleName: "owner", accesses: {access: [read, write]}} 
                ]} }}
            </expression>
         </assignment>
      </task>
      <transition name="" to="additionalInformationEnd"></transition>
   </task-node>
   <end-state name="additionalInformationEnd"></end-state>
   <fork name="inviteDefendantFork">
      <transition name="sendEmail" to="informDefendant"></transition>
      <transition name="back" to="inviteDefandant"></transition>
   </fork>
   <node name="informDefendant">
      <transition name="" to="submitCaseAnswer"></transition>
   </node>
   <task-node name="submitCaseAnswer">
      <transition name="" to="caseAnswerEnd"></transition>
   </task-node>
   <end-state name="caseAnswerEnd"></end-state>
   <task-node name="submitProcessRuling">
      <task name="Submit Process Ruling">
         <controller>
            <variable name="string:rulingText" access="read,write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read, write]}}
                ]} }}
            </expression>
         </assignment>
      </task>
      <transition name="" to="sendRulingMessages"></transition>
   </task-node>
   <node name="sendRulingMessages">
      <transition name="" to="endCaseProcess"></transition>
   </node>
   <end-state name="end">
   
   
   </end-state>
   <fork name="fork1">
      <transition name="toRequestAdditionalInformation" to="requestAdditionalInformation"></transition>
      <transition name="toInviteDefendant" to="inviteDefandant"></transition>
      <transition name="toSubmitProcessRuling" to="submitProcessRuling"></transition>
   </fork>
   <task-node name="inviteDefandant">
      <task name="Invite Defendant">
         <controller>
            <variable name="string:inviteText" access="read,write,required"></variable>
            <variable name="string:defendantEmail" access="read,write,required"></variable>
         </controller>
         <assignment class="com.idega.jbpm.identity.JSONAssignmentHandler">
            <expression>
                {taskAssignment: {roles: {role: [
                   {roleName: "handler", accesses: {access: [read, write]}}
                ]} }}
            </expression>
         </assignment>
      </task>
      <transition name="" to="inviteDefendantFork"></transition>
   </task-node>
   <node name="endCaseProcess">
      <event type="node-leave">
         <action name="endCase" class="is.idega.idegaweb.egov.bpm.cases.actionhandlers.EndCaseProcessHandler" config-type="constructor"></action>
      </event>
      <transition name="" to="endProcess"></transition>
   </node>
   <fork name="fork2">
      <transition name="" to="submitAdditionalInformation"></transition>
      <transition name="back" to="requestAdditionalInformation"></transition>
   </fork>
   <node name="endProcess">
   <!--  
      <action class="com.idega.jbpm.process.business.EndProcessHandler" config-type="constructor"></action>
      -->
   
      <event type="node-leave">
         <action name="endProcess" class="com.idega.jbpm.exe.EndProcessHandler" config-type="constructor"></action>
      </event>
      <transition name="" to="end"></transition>
   </node>
</process-definition>